name: CI

on:
  push:
    branches:
      - main
      - production
  pull_request: {}
  workflow_dispatch:
    secrets:
      MONGO_URI:
        required: true
      JWT_SECRET:
        required: true

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
      - name: Setup Volta
        uses: volta-cli/action@v4
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.0
          run_install: false
      - name: Get PNPM Store Path
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        name: Setup PNPM cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies
      - name: ESLint
        run: pnpm eslint .
      - name: Biome
        run: pnpm biome check --write

  test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
      - name: Setup Volta
        uses: volta-cli/action@v4
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.0
          run_install: false
      - name: Get PNPM Store Path
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        name: Setup PNPM cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies
      - name: Run E2E Tests
        run: pnpm test:e2e
        env:
          NODE_ENV: test
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          TEST_USER_EMAIL: test@example.com
          TEST_USER_PASSWORD: Password123
          TEST_USER_FIRST_NAME: Test
          TEST_USER_LAST_NAME: User
          TEST_USER_PHONE: +4512345678
          TEST_USER_INSTRUMENT: Violin

  status-check:
    name: Status Check
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Check Status
        run: |
          if [ "${{ needs.lint.result }}" == "success" ] && [ "${{ needs.test.result }}" == "success" ]; then
            exit 0
          else
            exit 1
          fi
